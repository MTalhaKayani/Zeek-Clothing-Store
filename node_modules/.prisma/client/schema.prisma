// prisma/schema.prisma

datasource db {
  provider = "sqlite"
  // Put this in your .env:
  // DATABASE_URL="file:../zeek.db"  -> DB at project root
  //   or
  // DATABASE_URL="file:./zeek.db"   -> DB inside /prisma
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//
// Enums
//
enum ProductStatus {
  DRAFT
  LIVE
}

enum ProductType {
  STITCHED
  UNSTITCHED
  APPAREL
  OTHER
}

enum AddressType {
  HOME
  OFFICE
}

//
// User & Address
//
model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique
  firstName    String
  lastName     String
  phone        String?
  newsletter   Boolean @default(false)
  passwordHash String

  // 1–1: default shipping address (named relation)
  defaultAddress   Address? @relation("DefaultAddress", fields: [defaultAddressId], references: [id])
  defaultAddressId Int?     @unique

  // 1–N: all addresses owned by the user (named relation)
  addresses Address[] @relation("UserAddresses")

  createdAt DateTime @default(now())
}

model Address {
  id Int @id @default(autoincrement())

  // Owner of this address (1–N, named relation)
  user   User @relation("UserAddresses", fields: [userId], references: [id])
  userId Int

  // Opposite side of the 1–1 default address relation
  defaultFor User? @relation("DefaultAddress")

  line1     String
  city      String
  zip       String
  type      AddressType
  isDefault Boolean     @default(false)
  createdAt DateTime    @default(now())

  @@index([userId])
}

//
// Inventory (Products, Images, Variants)
//
model Product {
  id          Int           @id @default(autoincrement())
  name        String
  slug        String        @unique
  description String
  price       Float
  category    String // "Women" | "Men" | "Apparels" | "Catalogue" | "New Arrivals"
  subcategory String? // "Lawn", "Cotton", "Organza", "Chiffon", "Essentials", etc.
  type        ProductType   @default(OTHER)
  status      ProductStatus @default(DRAFT)

  // Media
  images       ProductImage[] // enforce max 6 in app logic
  sizeChartUrl String? // extra image for size chart

  // Stock strategy
  variants    ProductVariant[] // used when type == STITCHED
  singleStock Int? // used when type != STITCHED

  // Bookkeeping
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([category])
  @@index([subcategory])
  @@index([status])
  @@index([deletedAt])
}

model ProductImage {
  id        Int    @id @default(autoincrement())
  productId Int
  url       String
  position  Int    @default(0) // 0..5, first image is thumbnail

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId, position])
}

model ProductVariant {
  id        Int    @id @default(autoincrement())
  productId Int
  sku       String @unique
  size      String
  stock     Int    @default(0)

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@index([size])
}
